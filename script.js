// URL-—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ etspring/pdd_russia
const RAW = (path) => `https://raw.githubusercontent.com/etspring/pdd_russia/master/${path}`;

document.addEventListener("DOMContentLoaded", () => {
  console.log("‚úÖ WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...");
  initApp();
});

async function initApp() {
  bindButtons();
  await loadData();
  showToast("–ì–æ—Ç–æ–≤–æ! –í–æ–ø—Ä–æ—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã.");
}

/* ======================
   –ö–ù–û–ü–ö–ò
====================== */
function bindButtons() {
  document.getElementById("btnQuickDuel").onclick = () => startQuickDuel();
  document.getElementById("btnTopics").onclick = () => listTopics();
  document.getElementById("btnTickets").onclick = () => listTickets();
  document.getElementById("btnStats").onclick = () => showToast("–û—Ç–∫—Ä–æ–π –≤ Telegram, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!");
}

/* ======================
   –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–•
====================== */
let allTickets = [];
let topicsMap = new Map();

async function loadData() {
  showToast("–ó–∞–≥—Ä—É–∂–∞—é –≤–æ–ø—Ä–æ—Å—ã –ü–î–î...");
  const res = await fetch(RAW("questions/tickets_A_B.json"));
  const data = await res.json();

  // –±–∏–ª–µ—Ç—ã
  allTickets = data.tickets || [];
  // —Ç–µ–º—ã
  const topicRes = await fetch(RAW("questions/topics.json")).catch(() => null);
  if (topicRes && topicRes.ok) {
    const topicData = await topicRes.json();
    for (const t of topicData) topicsMap.set(t.topic, t);
  }
  console.log(`üìó –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${allTickets.length} –≤–æ–ø—Ä–æ—Å–æ–≤, ${topicsMap.size} —Ç–µ–º`);
}

/* ======================
   –î–£–≠–õ–¨
====================== */
function startQuickDuel() {
  if (!allTickets.length) return showToast("–î–∞–Ω–Ω—ã–µ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã");
  const questions = shuffle(allTickets).slice(0, 20);
  renderQuestion(questions, 0, 0);
}

function renderQuestion(questions, index, score) {
  if (index >= questions.length) {
    showToast(`–î—É—ç–ª—å –æ–∫–æ–Ω—á–µ–Ω–∞! –†–µ–∑—É–ª—å—Ç–∞—Ç: ${score}/${questions.length}`);
    document.getElementById("screen").innerHTML =
      `<div class="card">üéØ –¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: <b>${score}</b> –∏–∑ ${questions.length}</div>`;
    return;
  }
  const q = questions[index];
  const img = q.image ? `<img src="${RAW(q.image.replace(/^\.\/|^\//,''))}" class="qimg"/>` : "";
  document.getElementById("screen").innerHTML = `
    <div class="card">
      <div class="qhead">–í–æ–ø—Ä–æ—Å ${index + 1}/${questions.length}</div>
      <div class="qtext">${q.question}</div>
      ${img}
      <div class="answers">
        ${q.answers.map((a, i) => `<div class="answer" data-i="${i}">${a.answer_text}</div>`).join("")}
      </div>
    </div>
  `;
  document.querySelectorAll(".answer").forEach(el =>
    el.addEventListener("click", () => {
      const i = +el.dataset.i;
      const correct = q.answers.findIndex(a => a.is_correct);
      if (i === correct) {
        el.classList.add("correct");
        showToast("‚úÖ –í–µ—Ä–Ω–æ!");
        score++;
      } else {
        el.classList.add("wrong");
        showToast("‚ùå –û—à–∏–±–∫–∞!");
      }
      setTimeout(() => renderQuestion(questions, index + 1, score), 600);
    })
  );
}

/* ======================
   –°–ü–ò–°–ö–ò –¢–ï–ú / –ë–ò–õ–ï–¢–û–í
====================== */
function listTopics() {
  const container = document.getElementById("screen");
  if (topicsMap.size === 0) return showToast("–¢–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
  container.innerHTML = `
    <div class="card"><h3>–¢–µ–º—ã</h3>
    ${[...topicsMap.keys()]
      .map(t => `<div class="answer" data-topic="${t}">${t}</div>`)
      .join("")}</div>`;
  document.querySelectorAll("[data-topic]").forEach(el =>
    el.addEventListener("click", () => startTopic(el.dataset.topic))
  );
}

function listTickets() {
  const container = document.getElementById("screen");
  if (allTickets.length === 0) return showToast("–ë–∏–ª–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
  const uniqueTickets = [...new Set(allTickets.map(q => q.ticket_number))];
  container.innerHTML = `
    <div class="card"><h3>–ë–∏–ª–µ—Ç—ã</h3>
    ${uniqueTickets.map(t => `<div class="answer" data-ticket="${t}">–ë–∏–ª–µ—Ç ${t}</div>`).join("")}</div>`;
  document.querySelectorAll("[data-ticket]").forEach(el =>
    el.addEventListener("click", () => startTicket(+el.dataset.ticket))
  );
}

function startTopic(topic) {
  const t = topicsMap.get(topic);
  if (!t) return showToast("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ç–µ–º–µ");
  renderQuestion(t.questions, 0, 0);
}

function startTicket(num) {
  const questions = allTickets.filter(q => q.ticket_number === num);
  renderQuestion(questions, 0, 0);
}

/* ======================
   –£–¢–ò–õ–ò–¢–´
====================== */
function shuffle(a) {
  return a.map(x => [Math.random(), x]).sort((a, b) => a[0] - b[0]).map(x => x[1]);
}
function showToast(text) {
  const el = document.getElementById("toast");
  el.innerHTML = `<div class="toast">${text}</div>`;
  el.style.opacity = 1;
  setTimeout(() => (el.style.opacity = 0), 1400);
}
